# Here we load the dataset.
link='https://github.com/marcevl/Team-Assignments/raw/master/Internet.RData'
load(file=url(link))
# Then, we call the Ggplot2 library.
library(ggplot2)
# We create a box plot for each ISP, illustrating the ranges of their dowload speeds.
box1 = ggplot(Internet, aes(x = ISP, y=Download.Speed))
# We add information regarding the colors of the plot, and then flip it so the axes are reversed.
box2 = box1 + geom_boxplot(color='black',fill='white',
outlier.color='black',
outlier.size=2) + coord_flip()
# Here, we add a title, caption, and change the labels on each axis.
box3 = box2 + labs(title='Wave provides highest range of download speeds', subtitle = 'Stevenson, WA',
y = 'Download Speed (Megabytes/Second)',
x = NULL,
caption = 'Source: Stevenson Business and Organization Internet Survey, 2018
Note: Wave Outlier of 500 Mbps Omitteed')
# Then, we format the location, size, color, and type style of each text element.
box4 = box3 + theme(plot.margin=unit(c(1,1,.5,.5),'cm'),
plot.title=(element_text(face='bold',
size=15,
hjust=0.5)),
plot.subtitle = (element_text(hjust = 0.5)),
plot.caption=element_text(size=8, vjust = -2),
text=element_text(color='gray25', size = 13),
panel.background = element_rect(fill='white'),
axis.ticks.y=element_blank(),
axis.line.x=element_line(color='black'))
# Finally, we change the scale of each axis so that we show the exact number of tick marks that we'd like.
box5 = box4 + scale_y_continuous(breaks=seq(0,100, 10),
limits=c(0,100)) + scale_x_discrete(limits=c('Wave','GorgeNet','CenturyLink'))
# Then, we "print" the vizualization.
box5
# We created a second box plot for each ISP, illustrating the ranges of their upload speeds.
box1 = ggplot(Internet, aes(x= ISP, y = Upload.Speed))
# We add information regarding the colors of the plot, and then flip it so the axes are reversed.
box2 = box1 + geom_boxplot(color='black',fill='white',
outlier.color='black',
outlier.size=2) + coord_flip()
# Here, we add a title, caption, and change the labels on each axis.
box3 = box2 + labs(title='Wave provides highest range of upload speeds', subtitle = 'Stevenson, WA',
y = 'Upload Speed (Megabytes/Second)',
x = NULL,
caption = 'Source: Stevenson Business and Organization Internet Survey, 2018')
# Then, we format the location, size, color, and type style of each text element.
box4 = box3 + theme(plot.margin=unit(c(1,1,.5,.5),'cm'),
plot.title=(element_text(face='bold',
size=15,
hjust=0.5)),
plot.subtitle = (element_text(hjust = 0.5)),
plot.caption=element_text(size=8, vjust=-2),
text=element_text(color='gray25', size = 13),
panel.background = element_rect(fill='white'),
axis.ticks.y=element_blank(),
axis.line.x=element_line(color='black'))
# Finally, we change the scale of each axis so that we show the exact number of tick marks that we'd like.
box5 = box4 + scale_y_continuous(breaks=seq(0,100, 10),
limits=c(0,100)) + scale_x_discrete(limits=c('Wave','GorgeNet','CenturyLink'))
# Then, we "print" the visualization.
box5
# For our second plots, we create a factor, ISP, with specific levels. It is based off the original variable.
ISP <- factor(Internet$ISP)
str(ISP)
levels(ISP)
# Then, we create a dataframe with just the factors that we are concerned with in these plots. It contains information for all of the ISPs.
df1 <- data.frame(ISP, Internet$Subscribed.Speed, Internet$Download.Speed, Internet$Upload.Speed)
names(df1) <- c("ISP", "Subscribed", "Download", "Upload")
# Next, we subsetted the data to only include Wave, CenturyLink, and GorgeNet.
df2 <- subset(df1, ISP %in% c("Wave", "CenturyLink", "GorgeNet"))
# We then created a base plot of Subscribed Speeds versus Upload Speeds.
base = ggplot(df2, aes(x=Subscribed, y=Upload))
# We added a scatterplot layer.
box1 = base + geom_point()
# Then, a reference line that represents the subscribed speeds.
box2 = box1 + geom_abline(a=0,b=45,lty=2,lwd=0.5, alpha = 0.5)
# We used the commadn facet wrap to separate the plot into three plots, one for each ISP.
box3 = box2 + facet_wrap( ~ ISP ,nrow = 1)
# Then, we added a scale for the y axis and a scale for the x axis.
box4 = box3 + scale_y_continuous(breaks=c(0,0,40,60,80,100,120),
limits = c(0, 120))
box5 = box4 + scale_x_continuous(breaks=c(0,30,60,90,120,150),
limits = c(0, 150))
# We coded for the title.
Title = 'GorgeNet Provides the Most Accurate Advertised Upload Speeds'
# We added the title, subtitle, x-axis label, y-axis label, and the caption.
box6 = box5 + labs(title=Title, subtitle = 'Stevenson, WA',
x= 'Suscribed Speed (Megabytes/Second)',
y = 'Upload Speed (Megabytes/Second)',
caption='Source: Stevenson Business and Organization Internet Survey,2018') + theme_bw()
# We formatted for each text element, as before.
box7 = box6 + theme(plot.margin=unit(c(1,1,.5,.5),'cm'),
plot.title=(element_text(face='bold',
size=15,
hjust=0.5)),
plot.subtitle = (element_text(hjust = 0.5, vjust = 2)),
plot.caption=element_text(size=8, vjust=-2),
text=element_text(color='gray25', size = 11),
axis.line.y=element_line(color = 'black'),
axis.line.x=element_line(color='black'),
axis.text=element_text(size=8))
# Finally, we "printed" the faceted scatterplot.
box7
# The instructions to create the faceted scatterplot are the same as in the past plot.
base = ggplot(df2, aes(x=Subscribed, y=Download))
box1 = base + geom_point()
box2 = box1 + geom_abline(a=0,b=45,lty=2,lwd=0.5, alpha = 0.5)
box3 = box2 + facet_wrap( ~ ISP ,nrow = 1)
box4 = box3 + scale_y_continuous(breaks=seq(0,120,20),
limits = c(0,120))
box5 = box4 + scale_x_continuous(breaks=seq(0,120,40),
limits = c(0,120))
Title = 'GorgeNet Provides the Most Accurate Advertised Download Speeds'
box6 = box5 + labs(title=Title, subtitle = 'Stevenson, WA',
x= 'Suscribed Speed (Mbps)',
y = 'Download Speed (Mbps)',
caption='Source: Stevenson Business and Organization Internet Survey, 2018
Note: Wave Outlier of 500 Mbps Omitted') + theme_bw()
box7 = box6 + theme(plot.margin=unit(c(1,1,.5,.5),'cm'),
plot.title=(element_text(face='bold',
size=15,
hjust=0.5)),
plot.subtitle = (element_text(hjust = 0.5, vjust = 2)),
plot.caption=element_text(size=8, vjust=-3),
text=element_text(color='gray25', size = 11),
axis.line.y=element_line(color = 'black'),
axis.line.x=element_line(color='black'),
axis.text=element_text(size=8),
axis.text.x = element_text(angle = 0, vjust = 0.7),
axis.title.x = element_text(vjust = -2, size = 10),
axis.title.y = element_text(size = 10, vjust = 2.5))
box7
# loading the data source and opening libraries
link='https://github.com/marcevl/Team-Assignments/raw/master/Internet2.RData'
load(file=url(link))
library(ggplot2)
# Here, we called three libraries that would help us make dot and whisker plots as well as
library(dotwhisker)
library(broom)
library(dplyr)
# We created the first model of regression for Download and Upload Speeds on Satisfaction with Speed
model1=lm(Satisfaction.Speed~Download.Speed+Upload.Speed,data=Internet2[,-1])
summary(model1)
# Here we tidied up and mutated the model of regression so thatwe add a column, "model," with the values of Model 1.
model1_t = tidy(model1) %>% mutate(model = "Model 1") %>%
relabel_predictors(Upload.Speed = "Upload",
Download.Speed = "Download",
Subscribed.Speed = "Subscribed")
# We then created a second model of regression, this time with a third variable: Subscribed Speeds.
model2=lm(Satisfaction.Speed~Download.Speed+Upload.Speed+Subscribed.Speed,data=Internet2[,-1])
summary(model2)
# We tidied up and mutated the second model of regression to have a column called "model," with values of "Model 2"
model2_t <- tidy(model2) %>% mutate(model = "Model 2") %>%
relabel_predictors(Upload.Speed = "Upload",
Download.Speed = "Download",
Subscribed.Speed = "Subscribed")
# Here we combined all the models
allModels=rbind(model1_t, model2_t)
# Here we plot the coefficients and their confidence intervals for all models and add or change theme/text elements
dwplot(allModels) +
geom_vline(xintercept = 0,
colour = "grey 50",
linetype = 2) +
scale_colour_grey(start = .1, end = .7) +
labs(y = "Independent Variables",
title = "Relationship Between Speed Satisfaction &
Download, Upload, and Subscribed Speed",
caption = "Source:Stevenson Business and Organization Internet Survey, 2018") +
theme(plot.margin=unit(c(1,1,.5,.5),'cm'),
plot.title=(element_text(face='bold',
size=15,
hjust=0.5)),
plot.subtitle = (element_text(hjust = 0.5, vjust = 2)),
plot.caption=element_text(size=9, vjust=-2),
text=element_text(color='black', size = 11),
panel.background = element_rect(fill='white'),
legend.title = element_blank(),
axis.line.y=element_line(color = 'black'),
axis.line.x=element_line(color='black'),
axis.text=element_text(size=8))
##Heatmap
library(scales)
library(ggplot2)
#loading data
link='https://github.com/marcevl/Team-Assignments/raw/master/Internet2.RData'
load(file=url(link))
#changing download speed to a variable from 0-1
Internet2$Download.Speed.Rescaled <- rescale(Internet2$Download.Speed)
#adding data to data frame
df1 <- Internet2
#removing obervation with outlier
df1 <- df1[-3,]
#removing unnecessary variables from heatmap data frame
df.heatmap <- df1[c(2,6,10,40)]
#removing ISPs without many observations
df.heatmap <- subset(df.heatmap, ISP %in% c("Wave", "CenturyLink", "GorgeNet"))
#plotting heat map
heat1 = ggplot(data = df.heatmap, aes(x = Satisfaction.Speed, y = ISP)) +
geom_tile(aes(fill = Download.Speed.Rescaled))
heat1 = heat1 + labs(title='Satisfaction with ISP not related with Download Speed',
y=NULL,
x='Satisfaction rating',
caption='Source: Stevenson Business and Organization Internet Survey, 2018',
fill='Range of \nDownload Speeds')
heat2 = heat1 + theme(plot.margin=unit(c(.5,1,1,1),'cm'),
plot.title=(element_text(face='bold',
size=15,
hjust=0,
margin=unit(c(0,0,.5,0),'cm'))),
plot.subtitle = (element_text(hjust = 0.5, vjust = 2)),
plot.caption=element_text(size=8, hjust=2, vjust = -1),
legend.text=element_blank(),
legend.background=element_rect(linetype='solid',
color='black'),
panel.background=element_rect(fill='white'),
text=element_text(color='black'),
axis.line.y=element_line(color = 'black'),
axis.line.x=element_line(color='black'),
axis.ticks=element_blank(),
axis.text=element_text(size=11))
heat2 + scale_fill_gradient(low='lightblue',high='navy',
guide_colorbar(reverse=TRUE,
title='Download
Speed'))
